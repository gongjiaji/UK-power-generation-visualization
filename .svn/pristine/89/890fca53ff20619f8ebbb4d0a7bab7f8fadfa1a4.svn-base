/*
package ce201.src;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

import java.io.File;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;


public class ScatterGraph {
    ArrayList<String> dataSet = PostDataSnippet.snippedData;
    //ctor creates jpeg
    public ScatterGraph(String title, String xLable, String yLable, String jpegName){

        JFreeChart scatterGraphObject = ChartFactory.createScatterPlot(title,xLable, yLable, createDataset(),
                PlotOrientation.VERTICAL, true,true,false);

        int width = 1000;//640;    */
/* Width of the image *//*

        int height = 1000;//480;   */
/* Height of the image *//*

        File scatterGraph = new File( jpegName );
        try{
            //ChartUtilities.saveChartAsJPEG(ScatterGraph ,lineChartObject, width ,height);
            ChartUtilities.saveChartAsJPEG(scatterGraph, scatterGraphObject, width, height);
        }catch (Exception e){
            System.out.println("Error whilst creating line chart");
        }
    }
    //creates data set using data from post data snippet
    public XYDataset createDataset(){
        XYSeriesCollection dataset = new XYSeriesCollection();
        String[] types = {"id", "timestamp", "demand", "frequency", "coal", "nuclear","cgt","wind","french_ict","dutch_ict","irish_ict","ew_ict","pumped","hydro","oil","ocgt","other","solar"};
        //System.out.println("data output in progress");
        for (String i: dataSet){
            String[] dataArray = i.split(",");
            for (int j = 4; j < dataArray.length;j++){
                XYSeries data = new XYSeries(types[j]);
                //value,energy type, date stamp
                try{
                    data.
                    dataset.addValue(Integer.parseInt(dataArray[j].trim()), types[j], createDate(dataArray[1]));
                }catch (NumberFormatException e){
                    dataset.addValue(Double.parseDouble(dataArray[j].trim()), types[j], createDate(dataArray[1]));
                }
            }
        }
        return dataset;
    }

    //converts timestamp from csv to date object
    public Date createDate(String stringDate){
        Date date = new Date();
        DateFormat df = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        try{
            date = df.parse(stringDate);
        }catch (ParseException e){
            System.out.println(e);
        }
        return date;
    }
}*/
